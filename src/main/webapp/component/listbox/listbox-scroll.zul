<zk>
		<listbox height="300px" checkmark="true" multiple="true">
			<listitem label="John" />
			<listitem label="MALE" />
			<listitem label="20" />
			<listitem label="A college student." />
			<listitem label="John" />
			<listitem label="MALE" />
			<listitem label="20" />
			<listitem label="A college student." />
			<listitem label="John" />
			<listitem label="MALE" />
			<listitem label="20" />
			<listitem label="A college student." />
			<listitem label="Mary" />
			<listitem label="FEMALE" />
			<listitem label="18" />
			<listitem label="A young lady." />
			<listitem label="Mary" />
			<listitem label="FEMALE" />
			<listitem label="18" />
			<listitem label="A young lady." />
			<listitem label="Mary" />
			<listitem label="FEMALE" />
			<listitem label="18" />
			<listitem label="A young lady." />
		</listbox>
<script><![CDATA[
	zk.afterLoad('zul.sel', function() {
	   var old = {};
		zk.override(zul.sel.SelectWidget.prototype, old, {
			_toggleSelect: function(row, toSel, evt, skipFocus) {
				if (!this._multiple) {
					var old = this.getSelectedItem();
					if (row != old && toSel)
						this._changeSelect(row, false);
				}
	
				this._changeSelect(row, toSel);
				if (!skipFocus) {
					
					// ZK-2140: should focus closest selected item after deselecting item 
					var rowIndex = this.indexOfItem(row), 
						min = Number.MAX_VALUE, 
						closestSelItem;
					for (var i = 0; i < this._selItems.length; ++i) {
						var item = this._selItems[i],
							index = this.indexOfItem(item),
							diff = rowIndex - index,
							oldmin = min;
						if ((diff <= 0) && closestSelItem) 
							break;
						min = Math.min(diff, min);
						if (min != oldmin)
							closestSelItem = item;
					}
					
					if (toSel || !closestSelItem)
						this._focus(row);
				}
	      }
	   });
	});                 
]]></script>		
</zk>